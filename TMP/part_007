<tex2html_file>#./chapter1/modulos.tex#
\subsection<<1436>>Introducción<<1436>>
\begin<<1535>>tex2html_deferred<<1535>>\par\end<<1536>>tex2html_deferred<<1536>>
\begin<<1437>>tex2html_preform<<1437>><tex2html_verbatim_mark>verbatim75#\end<<1438>>tex2html_preform<<1438>>
\begin<<1537>>tex2html_deferred<<1537>>\par\end<<1538>>tex2html_deferred<<1538>>
\begin<<1439>>tex2html_preform<<1439>><tex2html_verbatim_mark>verbatim76#\end<<1440>>tex2html_preform<<1440>>
\begin<<1539>>tex2html_deferred<<1539>>\par\end<<1540>>tex2html_deferred<<1540>>
\begin<<1441>>tex2html_preform<<1441>><tex2html_verbatim_mark>verbatim77#\end<<1442>>tex2html_preform<<1442>>
\begin<<1541>>tex2html_deferred<<1541>>\par\end<<1542>>tex2html_deferred<<1542>>
El módulo <tex2html_verb_mark>14<tex2html_verb_mark> exporta las funciones <tex2html_verb_mark>15<tex2html_verb_mark> 
y <tex2html_verb_mark>16<tex2html_verb_mark>. Para exportar un objeto lo añadimos 
al objeto expecial <tex2html_verb_mark>17<tex2html_verb_mark>.
\begin<<1543>>tex2html_deferred<<1543>>\par\end<<1544>>tex2html_deferred<<1544>>
Las variables locales al módulo serán privadas.
En este ejemplo la variable <tex2html_verb_mark>18<tex2html_verb_mark> es privada a <tex2html_verb_mark>19<tex2html_verb_mark>.
\begin<<1545>>tex2html_deferred<<1545>>\par\end<<1546>>tex2html_deferred<<1546>>
\begin<<1443>>tex2html_preform<<1443>><tex2html_verbatim_mark>verbatim78#\end<<1444>>tex2html_preform<<1444>>
\begin<<1547>>tex2html_deferred<<1547>>\par\end<<1548>>tex2html_deferred<<1548>>
\subsection<<1445>>Ciclos<<1445>>
\begin<<1549>>tex2html_deferred<<1549>>\par\end<<1550>>tex2html_deferred<<1550>>
\begin<<1446>>tex2html_preform<<1446>><tex2html_verbatim_mark>verbatim79#\end<<1447>>tex2html_preform<<1447>>
\begin<<1551>>tex2html_deferred<<1551>>\par\end<<1552>>tex2html_deferred<<1552>>
\begin<<1448>>tex2html_preform<<1448>><tex2html_verbatim_mark>verbatim80#\end<<1449>>tex2html_preform<<1449>>
\begin<<1553>>tex2html_deferred<<1553>>\par\end<<1554>>tex2html_deferred<<1554>>
\begin<<1450>>tex2html_preform<<1450>><tex2html_verbatim_mark>verbatim81#\end<<1451>>tex2html_preform<<1451>>
When <tex2html_verb_mark>20<tex2html_verb_mark> loads <tex2html_verb_mark>21<tex2html_verb_mark>, then <tex2html_verb_mark>22<tex2html_verb_mark> in turn loads
<tex2html_verb_mark>23<tex2html_verb_mark>. At that point, <tex2html_verb_mark>24<tex2html_verb_mark> tries to load <tex2html_verb_mark>25<tex2html_verb_mark>. In
order to prevent an infinite loop an unfinished copy of the <tex2html_verb_mark>26<tex2html_verb_mark>
exports object is returned to the <tex2html_verb_mark>27<tex2html_verb_mark> module. <tex2html_verb_mark>28<tex2html_verb_mark> then
finishes loading, and its exports object is provided to the <tex2html_verb_mark>29<tex2html_verb_mark>
module.
\begin<<1555>>tex2html_deferred<<1555>>\par\end<<1556>>tex2html_deferred<<1556>>
By the time <tex2html_verb_mark>30<tex2html_verb_mark> has loaded both modules, they're both finished. The
output of this program would thus be:
\begin<<1557>>tex2html_deferred<<1557>>\par\end<<1558>>tex2html_deferred<<1558>>
\begin<<1452>>tex2html_preform<<1452>><tex2html_verbatim_mark>verbatim82#\end<<1453>>tex2html_preform<<1453>>
\begin<<1559>>tex2html_deferred<<1559>>\par\end<<1560>>tex2html_deferred<<1560>>
\subsection<<1454>>Especificación de Ficheros Conteniendo Módulos<<1454>>
\begin<<1561>>tex2html_deferred<<1561>>\par\end<<1562>>tex2html_deferred<<1562>>
\begin<<1455>>enumerate<<1455>>
\item If the exact filename is not found, then node will attempt to
load the required filename with the added extension of <tex2html_verb_mark>31<tex2html_verb_mark>,
<tex2html_verb_mark>32<tex2html_verb_mark>, and then <tex2html_verb_mark>33<tex2html_verb_mark>.
\begin<<1563>>tex2html_deferred<<1563>>\par\end<<1564>>tex2html_deferred<<1564>>
\item
<tex2html_verb_mark>34<tex2html_verb_mark> files are interpreted as JavaScript text files, and <tex2html_verb_mark>35<tex2html_verb_mark> files are parsed as JSON text files. <tex2html_verb_mark>36<tex2html_verb_mark> files are interpreted as compiled addon modules 
\begin<<1565>>tex2html_deferred<<1565>>\par\end<<1566>>tex2html_deferred<<1566>>
\item
A module prefixed with <tex2html_verb_mark>37<tex2html_verb_mark> is an absolute path to the file. For example,
<tex2html_verb_mark>38<tex2html_verb_mark> will load the file at <tex2html_verb_mark>39<tex2html_verb_mark>.
\begin<<1567>>tex2html_deferred<<1567>>\par\end<<1568>>tex2html_deferred<<1568>>
\item
A module prefixed with <tex2html_verb_mark>40<tex2html_verb_mark> is relative to the file calling require(). 
\begin<<1569>>tex2html_deferred<<1569>>\par\end<<1570>>tex2html_deferred<<1570>>
\item
Without a leading verb|'/'| or <tex2html_verb_mark>41<tex2html_verb_mark> to indicate a file, the module is either a 
\index<<1511>>core module<<1511>>\emph<<1512>>core module<<1512>> or is loaded from a <tex2html_verb_mark>42<tex2html_verb_mark> folder.
\begin<<1571>>tex2html_deferred<<1571>>\par\end<<1572>>tex2html_deferred<<1572>>
\item
If the given path does not exist, <tex2html_verb_mark>43<tex2html_verb_mark> 
will throw an Error with its code property set to <tex2html_verb_mark>44<tex2html_verb_mark>.
\end<<1457>>enumerate<<1457>>
\begin<<1573>>tex2html_deferred<<1573>>\par\end<<1574>>tex2html_deferred<<1574>>
\subsection<<1508>>Carga desde Carpetas <<1458>>\begin<<1575>>tex2html_deferred<<1575>>\tt\end<<1576>>tex2html_deferred<<1576>>node\_modules<<1458>><<1508>>
\begin<<1577>>tex2html_deferred<<1577>>\par\end<<1578>>tex2html_deferred<<1578>>
\begin<<1459>>enumerate<<1459>>
\item
If the module identifier passed to <tex2html_verb_mark>45<tex2html_verb_mark> is not a native module,
and does not begin with <tex2html_verb_mark>46<tex2html_verb_mark>, <tex2html_verb_mark>47<tex2html_verb_mark>, or <tex2html_verb_mark>48<tex2html_verb_mark>, then node starts at the
parent directory of the current module, and adds <tex2html_verb_mark>49<tex2html_verb_mark>, and
attempts to load the module from that location.
\begin<<1579>>tex2html_deferred<<1579>>\par\end<<1580>>tex2html_deferred<<1580>>
\item
If it is not found there, then it moves to the parent directory, and so
on, until the root of the tree is reached.
\end<<1460>>enumerate<<1460>>
\begin<<1581>>tex2html_deferred<<1581>>\par\end<<1582>>tex2html_deferred<<1582>>
For example, if the file at <tex2html_verb_mark>50<tex2html_verb_mark> called
require(<tex2html_verb_mark>51<tex2html_verb_mark>), then node would look in the following locations,
in this order:
\begin<<1583>>tex2html_deferred<<1583>>\par\end<<1584>>tex2html_deferred<<1584>>
\begin<<1461>>tex2html_preform<<1461>><tex2html_verbatim_mark>verbatim83#\end<<1462>>tex2html_preform<<1462>>
\begin<<1585>>tex2html_deferred<<1585>>\par\end<<1586>>tex2html_deferred<<1586>>
This allows programs to localize their dependencies, so that they do not clash.
\begin<<1587>>tex2html_deferred<<1587>>\par\end<<1588>>tex2html_deferred<<1588>>
\subsection<<1463>>Las Carpetas Usadas Como Módulos<<1463>>
It is convenient to organize programs and libraries into self-contained
directories, and then provide a single entry point to that library. 
\begin<<1589>>tex2html_deferred<<1589>>\par\end<<1590>>tex2html_deferred<<1590>>
There
are a few ways in which a folder may be passed to <tex2html_verb_mark>52<tex2html_verb_mark> as an
argument.
\begin<<1591>>tex2html_deferred<<1591>>\par\end<<1592>>tex2html_deferred<<1592>>
\begin<<1464>>enumerate<<1464>>
\item
The first is to create a <tex2html_verb_mark>53<tex2html_verb_mark> file in the root of the
folder, which specifies a <tex2html_verb_mark>54<tex2html_verb_mark> module. 
An example <tex2html_verb_mark>55<tex2html_verb_mark> file
might look like this:
\begin<<1593>>tex2html_deferred<<1593>>\par\end<<1594>>tex2html_deferred<<1594>>
\begin<<1465>>tex2html_preform<<1465>><tex2html_verbatim_mark>verbatim84#\end<<1466>>tex2html_preform<<1466>>
\begin<<1595>>tex2html_deferred<<1595>>\par\end<<1596>>tex2html_deferred<<1596>>
If this was in a folder at 
<tex2html_verb_mark>56<tex2html_verb_mark>, then <tex2html_verb_mark>57<tex2html_verb_mark> would attempt
to load <tex2html_verb_mark>58<tex2html_verb_mark>.
\begin<<1597>>tex2html_deferred<<1597>>\par\end<<1598>>tex2html_deferred<<1598>>
This is the extent of Node's awareness of <tex2html_verb_mark>59<tex2html_verb_mark> files.
\begin<<1599>>tex2html_deferred<<1599>>\par\end<<1600>>tex2html_deferred<<1600>>
\item
If there is no <tex2html_verb_mark>60<tex2html_verb_mark> 
file present in the directory, then node will
attempt to load an 
<tex2html_verb_mark>61<tex2html_verb_mark> or
<tex2html_verb_mark>62<tex2html_verb_mark> 
file out of that directory. 
\begin<<1601>>tex2html_deferred<<1601>>\par\end<<1602>>tex2html_deferred<<1602>>
For
example, if there was no 
<tex2html_verb_mark>63<tex2html_verb_mark> file in the above example, then
<tex2html_verb_mark>64<tex2html_verb_mark> would attempt to load:
\begin<<1603>>tex2html_deferred<<1603>>\par\end<<1604>>tex2html_deferred<<1604>>
\begin<<1467>>tex2html_preform<<1467>><tex2html_verbatim_mark>verbatim85#\end<<1468>>tex2html_preform<<1468>>
\begin<<1605>>tex2html_deferred<<1605>>\par\end<<1606>>tex2html_deferred<<1606>>
\end<<1469>>enumerate<<1469>>
\begin<<1607>>tex2html_deferred<<1607>>\par\end<<1608>>tex2html_deferred<<1608>>
\subsection<<1470>>Caching<<1470>>
\begin<<1609>>tex2html_deferred<<1609>>\par\end<<1610>>tex2html_deferred<<1610>>
\begin<<1471>>enumerate<<1471>>
\item
Modules are cached after the first time they are loaded. This means
(among other things) that every call to <tex2html_verb_mark>65<tex2html_verb_mark> will get exactly
the same object returned, if it would resolve to the same file.
\begin<<1611>>tex2html_deferred<<1611>>\par\end<<1612>>tex2html_deferred<<1612>>
\item
Multiple calls to <tex2html_verb_mark>66<tex2html_verb_mark> may not cause the module code
to be executed multiple times. This is an important feature. With it,
\index<<1513>>partially done<<1513>>\emph<<1514>>partially done<<1514>> objects can be returned, thus allowing transitive
dependencies to be loaded even when they would cause cycles.
\begin<<1613>>tex2html_deferred<<1613>>\par\end<<1614>>tex2html_deferred<<1614>>
\item
If you want to have a module execute code multiple times, then export
a function, and call that function.
\begin<<1615>>tex2html_deferred<<1615>>\par\end<<1616>>tex2html_deferred<<1616>>
\item
Modules are cached based on their <<1473>>\begin<<1617>>tex2html_deferred<<1617>>\bf\end<<1618>>tex2html_deferred<<1618>>resolved filename<<1473>>. Since modules may
resolve to a different filename based on the location of the calling
module (loading from <tex2html_verb_mark>67<tex2html_verb_mark>), it is not a guarantee that
<tex2html_verb_mark>68<tex2html_verb_mark> will always return the exact same object, if it would
resolve to different files.
\begin<<1619>>tex2html_deferred<<1619>>\par\end<<1620>>tex2html_deferred<<1620>>
\end<<1474>>enumerate<<1474>>
\begin<<1621>>tex2html_deferred<<1621>>\par\end<<1622>>tex2html_deferred<<1622>>
\subsection<<1509>>El Objeto <<1475>>\begin<<1623>>tex2html_deferred<<1623>>\tt\end<<1624>>tex2html_deferred<<1624>>module<<1475>> y <<1476>>\begin<<1625>>tex2html_deferred<<1625>>\tt\end<<1626>>tex2html_deferred<<1626>>module.exports<<1476>><<1509>>
\begin<<1627>>tex2html_deferred<<1627>>\par\end<<1628>>tex2html_deferred<<1628>>
\begin<<1477>>enumerate<<1477>>
\item
In each module, the <tex2html_verb_mark>69<tex2html_verb_mark> free variable is a reference to the object
representing the current module. 
\begin<<1629>>tex2html_deferred<<1629>>\par\end<<1630>>tex2html_deferred<<1630>>
\item
In particular <tex2html_verb_mark>70<tex2html_verb_mark> is the
same as the exports object. 
\begin<<1631>>tex2html_deferred<<1631>>\par\end<<1632>>tex2html_deferred<<1632>>
\item
<tex2html_verb_mark>71<tex2html_verb_mark> isn't actually a global but rather
local to each module.
\begin<<1633>>tex2html_deferred<<1633>>\par\end<<1634>>tex2html_deferred<<1634>>
\item
The exports object is created by the <tex2html_verb_mark>72<tex2html_verb_mark> system. 
Sometimes this is not acceptable, 
many want their module to be an instance of some class. 
To do this assign the desired export object to <tex2html_verb_mark>73<tex2html_verb_mark>. 
\begin<<1635>>tex2html_deferred<<1635>>\par\end<<1636>>tex2html_deferred<<1636>>
\begin<<1478>>itemize<<1478>>
\item
\begin<<1479>>tex2html_preform<<1479>><tex2html_verbatim_mark>verbatim86#\end<<1480>>tex2html_preform<<1480>>
\begin<<1637>>tex2html_deferred<<1637>>\par\end<<1638>>tex2html_deferred<<1638>>
\item
\begin<<1481>>tex2html_preform<<1481>><tex2html_verbatim_mark>verbatim87#\end<<1482>>tex2html_preform<<1482>>
\item
\begin<<1483>>tex2html_preform<<1483>><tex2html_verbatim_mark>verbatim88#\end<<1484>>tex2html_preform<<1484>>
\end<<1485>>itemize<<1485>>
La asignación a <tex2html_verb_mark>74<tex2html_verb_mark> debe hacerse inmediatamente. 
No puede hacerse en un callback.
\begin<<1639>>tex2html_deferred<<1639>>\par\end<<1640>>tex2html_deferred<<1640>>
\end<<1486>>enumerate<<1486>>
\begin<<1641>>tex2html_deferred<<1641>>\par\end<<1642>>tex2html_deferred<<1642>>
\subsection<<1510>>Algoritmo de Búsqueda Ejecutado por <<1487>>\begin<<1643>>tex2html_deferred<<1643>>\tt\end<<1644>>tex2html_deferred<<1644>>require<<1487>><<1510>>
\begin<<1645>>tex2html_deferred<<1645>>\par\end<<1646>>tex2html_deferred<<1646>>
 
  \paragraph<<1515>>require(X) from module at path Y<<1515>>
  \begin<<1516>>tabular<<1516>><<1517>>c<<1517>>
  \end<<1518>>tabular<<1518>>

\begin<<1489>>enumerate<<1489>>
\item If X is a core module,
\begin<<1490>>enumerate<<1490>>
  \item return the core module
  \item STOP
\end<<1491>>enumerate<<1491>>
\item If X begins with './' or '/' or '../'
\begin<<1492>>enumerate<<1492>>
  \item <tex2html_verb_mark>75<tex2html_verb_mark>
  \item <tex2html_verb_mark>76<tex2html_verb_mark>
\end<<1493>>enumerate<<1493>>
\item <tex2html_verb_mark>77<tex2html_verb_mark>
\item THROW ;SPMquot;not found;SPMquot;
\end<<1494>>enumerate<<1494>>
\begin<<1647>>tex2html_deferred<<1647>>\par\end<<1648>>tex2html_deferred<<1648>>
 
  \paragraph<<1519>>LOAD\_AS\_FILE(X)<<1519>>
  \begin<<1520>>tabular<<1520>><<1521>>c<<1521>>
  \end<<1522>>tabular<<1522>>

\begin<<1496>>enumerate<<1496>>
\item If X is a file, load X as JavaScript text.  STOP
\item If X.js is a file, load X.js as JavaScript text.  STOP
\item If X.node is a file, load X.node as binary addon.  STOP
\end<<1497>>enumerate<<1497>>
\begin<<1649>>tex2html_deferred<<1649>>\par\end<<1650>>tex2html_deferred<<1650>>
 
  \paragraph<<1523>>LOAD\_AS\_DIRECTORY(X)<<1523>>
  \begin<<1524>>tabular<<1524>><<1525>>c<<1525>>
  \end<<1526>>tabular<<1526>>

\begin<<1499>>enumerate<<1499>>
\item If X/package.json is a file,
   a. Parse X/package.json, and look for ;SPMquot;main;SPMquot; field.
   b. let M = X + (json main field)
   c. <tex2html_verb_mark>78<tex2html_verb_mark>
\item If X/index.js is a file, load X/index.js as JavaScript text.  STOP
\item If X/index.node is a file, load X/index.node as binary addon.  STOP
\end<<1500>>enumerate<<1500>>
\begin<<1651>>tex2html_deferred<<1651>>\par\end<<1652>>tex2html_deferred<<1652>>
 
  \paragraph<<1527>>LOAD\_NODE\_MODULES(X, START)<<1527>>
  \begin<<1528>>tabular<<1528>><<1529>>c<<1529>>
  \end<<1530>>tabular<<1530>>

\begin<<1502>>enumerate<<1502>>
\item let <tex2html_verb_mark>79<tex2html_verb_mark>
\item for each DIR in DIRS:
   a. <tex2html_verb_mark>80<tex2html_verb_mark>
   b. <tex2html_verb_mark>81<tex2html_verb_mark>
\end<<1503>>enumerate<<1503>>
\begin<<1653>>tex2html_deferred<<1653>>\par\end<<1654>>tex2html_deferred<<1654>>
 
  \paragraph<<1531>>NODE\_MODULES\_PATHS(START)<<1531>>
  \begin<<1532>>tabular<<1532>><<1533>>c<<1533>>
  \end<<1534>>tabular<<1534>>

\begin<<1505>>enumerate<<1505>>
\item let PARTS = path split(START)
\item let ROOT = index of first instance of ;SPMquot;node\_modules;SPMquot; in PARTS, or 0
\item let I = count of PARTS - 1
\item let DIRS = []
\item while I ;SPMgt; ROOT,
   a. if PARTS[I] = ;SPMquot;node\_modules;SPMquot; CONTINUE
   c. DIR = path join(PARTS[0 .. I] + ;SPMquot;node\_modules;SPMquot;)
   b. DIRS = DIRS + DIR
   c. let I = I - 1
\item return DIRS
\end<<1506>>enumerate<<1506>>
<tex2html_endfile>#./chapter1/modulos.tex#
\begin<<1655>>tex2html_deferred<<1655>>\par\end<<1656>>tex2html_deferred<<1656>>
\section<<1507>>Como Crear tu Propio Módulo en Node.js<<1507>>
